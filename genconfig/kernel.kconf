# config/kernelconf.kconf

menu "HW features"

config configATAG
    bool "Support bootloader ATAGs"
    default y
    ---help---
        Linux ATAGs support. ATAGs are used to describe the current hardware
        configuration on some systems where a Linux compatible bootloader is
        involved.

        If unsure, say Y.

config configMP
    bool "Enable MP support"
    default n
    depends on configHAVE_MP_CAP
    ---help---
        Selecting configMP enables some MP safeguards but doesn't break anything
        even if MP is not actually supported on the hardware.

        If unsure, say Y.

config configMMU
    bool "MMU support"

config configUART
    bool "UART support"
    default y
    select configDEVFS

if configUART

config configUART_MAX_PORTS
    int "Maximum number of UART ports"
    default 2
    range 1 256

endif

menuconfig configFB
    bool "Frame Buffer support"
    default n

if configFB

config configFB_FONT_LATIN
    bool "Latin extension"
    default n

config configFB_FONT_GREEK
    bool "Greek extension"
    default n

config configFB_FONT_HIRAGANA
    bool "Hiragana extension"

endif

menu "BCM drivers"

config configBCM_MB
    bool "BCM2835 mailboxes"
    default y if configBCM2835
    depends on configBCM2835

config configBCM_JTAG
    bool "BCM2835 JTAG support"
    default n
    depends on configBCM2835

config configBCM_FB
    bool "BCM2835 FB"
    default n
    depends on configBCM2835 && configBCM_MB

endmenu

menu "Raspberry PI drivers"

config configRPI_LEDS
    bool "Raspberry PI leds"
    default n
    depends on configBCM2835

config configRPI_EMMC
    bool "Raspberry PI EMMC"
    default n
    depends on configBCM2835 && configBCM_MB

endmenu

endmenu


menuconfig configKLOGGER
    bool "KERROR kernel logging facility"
    default y

if configKLOGGER
config configKERROR_BUF_SIZE
    int "Lastlog buf size"
    default 4096
config configKERROR_MAXLEN
    int "Max kerror line length"
    default 400

config configKERROR_UART
    bool "Direct UART0 printing support"
    default y
    depends on configUART

config configKERROR_FB
    bool "Print to FB support"
    default n
    depends on configFB

config configDEF_KLOGGER
    int "Default klogger method"
    range 0 3
    default 2
    ---help---
        0 = No logger
        1 = Kerror buffer
        2 = UART0
        3 = FB

choice
    prompt "Log level"
    default configDEBUG_CRIT
config configDEBUG_CRIT
    bool "Normal build"
config configDEBUG_ERR
    bool "Errors"
    ---help---
        Additional error messages and asserts for serious errors that should not
        occur in normal operation.
config configDEBUG_WARN
    bool "Additional warnings."
config configDEBUG_INFO
    bool "Additional information"
    ---help---
        Additional information on warnings and errors.
config configDEBUG_DEBUG
    bool "Debug messages"
    ---help---
        All debug messages and asserts.
endchoice

endif


menu "Memory Map"

config configPT_AREA_START
    hex "Page table area start"
    default 0x00100000
    depends on configMMU

config configPT_AREA_END
    hex "Page table area end"
    default 0x002FFFFF
    depends on configMMU

config configKSTACK_START
    hex "kstack start"
    default 0x00001000

config configKSTACK_END
    hex "kstack end"
    default 0x00007fff

config configTKSTACK_START
    hex "tkstack vaddr start"
    default 0x00000000
    depends on configMMU

config configTKSTACK_END
    hex "tkstack vaddr end"
    default 0x00000fff
    depends on configMMU

config configKERNEL_START
    hex "kernel caddr start"
    default 0x00008000

config configKERNEL_END
    hex "kernel caddr end"
    default 0x000FFFFF

config configDYNMEM_START
    hex "dynmem start"
    default 0x00300000

config configDYNMEM_END
    hex "dynmem end"
    default 0x00FFFFFF

config configKSECT_START
    hex "ksect start"
    default 0x30000000
    ---help---
        Ksects, kernel dynamic virtual sections, are mainly mainly used to
        access memory mapped IO by using strongly ordered access on
        the virtual ksect address.

config configKSECT_END
    hex "ksect end"
    default 0x50000000

endmenu


menu "Thread Scheduling"

choice
    prompt "Sceduler"
    default configSCHED_TINY
config configSCHED_TINY
    bool "sched_tiny"
config configSCHED_CDS
    bool "sched_cds"
endchoice

config configSCHED_HZ
    int "Scheduler frequency in Hz."
    default 100
    range 5 1000

choice
    prompt "Load averages calculation period"
    default configSCHED_LAVGPERIOD_11SEC
config configSCHED_LAVGPERIOD_5SEC
    bool "5 sec"
config configSCHED_LAVGPERIOD_11SEC
    bool "11 sec"
endchoice

config configSCHED_DEBUG
    bool "Thread scheduler debugging"
    default n
    ---help---
        Enable debugging invariants and messages in thread scheduling related
        functions.

if configSCHED_TINY
config configSCHED_MAX_THREADS
    int "Maximum number of threads"
    default 10
    ---help---
        sched_tiny supports only a fixed number of threads in execution.
endif

if configSCHED_CDS
config configSCHED_CDS_EPOCHLEN
    int "CDS epoch length"
    default 100
endif

endmenu


menu "Processes"

config configMAXPROC
    int "maxproc"
    default 5
    ---help---
        Default maximum number of processes.

config configPROC_DEBUG
    bool "Proc debug"
    default n
    ---help---
        Process subsystem debugging. This knob adds more invariants that cause
        a performance hit as well as print a lot of useles debug messages to
        the klogging facility.

endmenu

menu "Generic"

config configTIMERS_MAX
    int "Maximum number of kernel timers"
    default 16
    range 15 65535
    ---help---
        Maximum number of timers available.

config configUSRINIT_SSIZE
    int "init stack size"
    default 8192
    ---help---
        Stack size for init process main() thread.

config configUSRINIT_PRI
    int "init priority"
    default 0
    ---help---
        Priority of usrinit thread.

config configMAC
    bool "Mandatory Access Control"
    default n
    ---help---
        Currently very light implementation of access control to some kernel
        features. Selecting this option adds a bitmaps for disabling and
        granting privileges per process basis.

        This feature adds memory usage around 2048 bytes per process.

config configBIO_DEBUG
    bool "bio debugging"
    default n
    ---help---
        Enable bio/buf debug messages and additional asserts.

config configLOCK_DEBUG
    bool "klock debugging"
    default n
    ---help---
        Debug kernel locks.

config configKMALLOC_DEBUG
    bool "kmalloc debugging"
    default n
    ---help---
        Debug kmalloc.

endmenu


menu "File Systems"

menuconfig configMOUNTROOTFS
    bool "Rootfs"
    default y

if configMOUNTROOTFS

config configROOTFS_NAME
    string "FS name"
    default "ramfs" if configRAMFS

config configROOTFS_DEVPATH
    string "Path to dev"

config configROOTFS_FLAGS
    int "Mount flags"
    default 0

config configROOTFS_PARMS
    string "Params"

endif

menuconfig configMBR
    bool "MBR Support"
    default n
    depends on configDEVFS

config MBR_DEBUG
    bool "MBR debug"
    default n
    depends on configMBR

config configRAMFS
    bool "ramfs"
    default y
    select configFS_INPOOL

config configDEVFS
    bool "devfs"
    default y
    select configRAMFS
comment "No devfs"
    depends on !configDEVFS

menu "FS libs"

config configFS_INPOOL
    bool "inode pools"
    ---help---
        inode pool speeds up the creation of new inodes in file systems.
        A pool is used to get new preallocated inodes as well as destroying
        and recyling old inodes. A file system may have unlimited amount of
        pools as pools are handled as objects.

        This is usually auto selected.

config configVFS_HASH
    bool "VFS Hash"
    ---help---
        A vnode hashmap for file systems that have to cache vnode data in-core.

        This is usually auto selected.

endmenu

endmenu


menu "Library routines"

config configSTRING_OPT_SIZE
    bool "Optimize string functions for size"
    ---help---
        Optimize string functions for speed or size.

endmenu

menuconfig configKUNIT
    bool "In-Kernel Unit Tests"
    ---help---
        KUnit is a port of PUnit for in-kernel testing. KUnit is only needed
        if you are willing to run those tests. In-kernel tests may cause
        serious stability issues or crash the kernel.
        Tests are exported under sysctl debug.test tree and can be executed
        by writing to a test node. Test log is then written to the kernel
        logging facility.

if configKUNIT
config configKUNIT_REPORT_ORIENTED
    bool "Report oriented"

config configKUNIT_FS
    bool "fs"
    ---help---
        Tests for vfs and filesystems.

config configKUNIT_GENERIC
    bool "generic"
    ---help---
        Tests for generic data structures.

config configKUNIT_HAL
    bool "hal"
    ---help---
        Tests for HAL.

config configKUNIT_KSTRING
    bool "kstring"
    ---help---
        Tests for kstring library.

config configKUNIT_VM
    bool "vm"
    ---help---
        Tests for virtual memory related libraries and subsystems.

endif
