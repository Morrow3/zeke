# Zeke - Kernel Makefile
#
# Copyright (c) 2013, 2014 Olli Vanhoja <olli.vanhoja@cs.helsinki.fi>
# Copyright (c) 2012, 2013, Olli Vanhoja <olli.vanhoja@ninjaware.fi>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met: 
#
# 1. Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer. 
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution. 
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Configuration files ##########################################################
# Generic config
include $(ROOT_DIR)/config/buildconf.mk
include $(CONFIG_DIR)/kernelconf.mk
# Autogenerated header file with config definitions
AUTOCONF_H = $(ROOT_DIR)/config/autoconf.h
################################################################################
# We use suffixes because it's fun
.SUFFIXES:                      # Delete the default suffixes
.SUFFIXES: .c .bc .o .h .S ._S  # Define our suffix list

# Makefiles for modules ########################################################
# Atm for sake of simplicity we keep all makefiles on single level
MODMKFILES = $(wildcard ./kmodmakefiles/*.mk)
include $(MODMKFILES)
# Following will generate a list of module names
ALLMODULES = $(basename $(notdir $(MODMKFILES)))
# Remove modules that do not contain any compilation units
MODULES += $(foreach var, $(ALLMODULES), $(if $(strip $($(var)-SRC-1) $($(var)-ASRC-1)), $(var),))
################################################################################

# Compiler Options #############################################################
ARMGNU      = arm-none-eabi
#CC         = SET IN BUILDCONF.MK
CCFLAGS    += -emit-llvm -ffreestanding
CCFLAGS    += -nostdlib -nostdinc
#OPT        = SET IN BUILDCONF.MK
OFLAGS     += -std-compile-opts
#LLC        = SET IN BUILDCONF.MK
LLCFLAGS   += -mtriple=$(ARMGNU)
ASFLAGS    +=#
LDFLAGS    +=#
################################################################################

# Include Dirs #################################################################
IDIR   = ./include ../include ../config
AIDIR += ../config
################################################################################
IDIR  := $(patsubst %,-I%,$(subst :, ,$(IDIR)))
AIDIR := $(patsubst %,-I%,$(subst :, ,$(AIDIR)))

# Select & Include Modules #####################################################
# Available selections for source code files:
SRC-	=# C sources
SRC-0  	=#
SRC-1  	=#
ASRC-  	=# Assembly sources
ASRC-0 	=#
ASRC-1	=#
# (A)SRC- and (A)SRC-0 meaning that submodule won't be compiled

# Include sources from top modules
SRC-1 += $(foreach var,$(MODULES), $($(var)-SRC-1))
ASRC-1 += $(foreach var,$(MODULES), $($(var)-ASRC-1))
################################################################################
# Parse file names

# Assembly Obj files
ASOBJS 	:= $(patsubst %.S, %.o, $(ASRC-1))

# C Obj files
BCS  	:= $(patsubst %.c, %.bc, $(SRC-1))
OBJS 	:= $(patsubst %.c, %.o, $(SRC-1))

STARTUP_O = $(patsubst %.S, %.o, $(STARTUP))

# a files for modules
MODAS = $(addsuffix .a, $(MODULES))

KERNEL_IMG = $(ROOT_DIR)/kernel.img

# Targets ######################################################################

all: kernel

# Kernel
kernel: $(KERNEL_IMG)

$(AUTOCONF_H): $(CONFIG_DIR)/targetconf.mk $(CONFIG_DIR)/kernelconf.mk
	$(ROOT_DIR)/tools/aconf.sh $^ $@

$(STARTUP_O): $(STARTUP) $(AUTOCONF_H)
	@echo "AS $@"
	@$(UNIFDEFALL) $(AIDIR) $< | $(ARMGNU)-as -o $(STARTUP_O)

$(ASOBJS): $(ASRC-1) $(UNIFDEF) $(AUTOCONF_H)
	@echo "AS $@"
	@$(UNIFDEFALL) $(AIDIR) $*.S | $(ARMGNU)-as -am $(AIDIR) -o $@

$(BCS): $(SRC-1) $(AUTOCONF_H)
	@echo "CC $@"
	@$(CC) $(CCFLAGS) $(IDIR) -c $*.c -o $@

$(OBJS): $(BCS)
	$(eval CUR_OPT := $*.opt.bc)
	$(eval CUR_OPT_S := $*.opt.s)
	@echo "AS $@"
	@$(OPT) $(OFLAGS) $*.bc -o $(CUR_OPT)
	@$(LLC) $(LLCFLAGS) $(CUR_OPT) -o $(CUR_OPT_S)
	@$(ARMGNU)-as $(CUR_OPT_S) -o $@ $(ASFLAGS)

$(MODAS): $(ASOBJS) $(OBJS)
	$(eval CUR_MODULE := $(basename $@))
	$(eval CUR_OBJS := $(patsubst %.c, %.o, $($(CUR_MODULE)-SRC-1)))
	$(eval CUR_OBJS += $(patsubst %.S, %.o, $($(CUR_MODULE)-ASRC-1)))
	@echo "AR $@"
	@ar rcs $@ $(CUR_OBJS)

$(KERNEL_IMG): $(MEMMAP) $(STARTUP_O) $(MODAS)
	$(ARMGNU)-ld -o $(ROOT_DIR)/kernel.elf -T $(MEMMAP) $(LDFLAGS) $(STARTUP_O) --whole-archive $(MODAS) --no-whole-archive $(CRT)
	$(ARMGNU)-objdump -D $(ROOT_DIR)/kernel.elf > $(ROOT_DIR)/kernel.list
	$(ARMGNU)-objcopy -O binary $(ROOT_DIR)/kernel.elf $(KERNEL_IMG)
# End of Kernel

.PHONY: kernel clean

clean:
	rm -f $(ASOBJS) $(OBJS) $(STARTUP_O)
	rm -f $(BCS)
	find . -type f -name "*.bc" -exec rm -f {} \;
	find . -type f -name "*.opt.bc" -exec rm -f {} \;
	find . -type f -name "*.opt.s" -exec rm -f {} \;
	rm -f *.bin
	rm -f *.img
	rm -f *.elf
	rm -f *.list
	rm -f *.a
