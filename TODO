- Implement wait for a signal syscall
- Child nodes should be killed when parent exits
- Events are not queued atm, do we need queuing?
- Create kernel library and example program as their own projects (memory aligned mapping)
- Implement real cpu load calculation by calculating wait states
- Implement cpu load (moving) averages
- Implement rest of Thread Management functions/syscalls
- Implement memory pools
- Implement mutex and semaphores
- Timers and kernel time functions
- Implement other messaging services
- Thread parenting to help killing and possibly improve responsiveness in
  multi-tasking when parent is in exec at the same time with childs
- implement own dlib
- Thread related functions and variables could be moved
  from sched.c to thread.c, This would although require a lot of refactoring
