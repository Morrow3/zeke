- Implement inherintace; parent and child thread system
- Signals should be stored individually/separated from event struct to allow other types of events?
- Events are not queued atm, ensure that events don't get overwritten or implement a queue for events per thread
- Signal functions will mess event structure if event type is not signal!
- Implement wait forever for wait syscall
- Implement real cpu load calculation by calculating wait states
- Implement cpu load (moving) averages
- Thread parenting to help killing and possibly improve responsiveness in
  multi-tasking when parent is in exec at the same time with childs
- implement own dlib
- Thread related functions and variables could be moved
  from sched.c to thread.c, This would although require a lot of refactoring
...
- Binary loading to ram?
